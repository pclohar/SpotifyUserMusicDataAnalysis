{"ast":null,"code":"import axios from 'axios';\nimport { removeHashParams } from './url';\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n};\nexport function getLoginRedirect() {\n  return new Promise((resolve, reject) => {\n    axios.get('/auth/redirect-spotify').then(res => resolve(res.data), err => reject(err));\n  });\n}\nexport function registerSpotify(code) {\n  return new Promise((resolve, reject) => {\n    axios.post('/auth/user', {\n      code: removeHashParams(code)\n    }, config).then(res => resolve(res.data), err => reject(err));\n  });\n}\nexport function getSpotifyUser() {\n  return new Promise((resolve, reject) => {\n    axios.get('/auth/user').then(res => resolve(res.data), err => reject(err));\n  });\n}\nexport function logout() {\n  return new Promise((resolve, reject) => {\n    axios.get('/auth/logout').then(res => resolve(res), err => reject(err));\n  });\n}","map":{"version":3,"sources":["/Volumes/Documents/SPOTIFY API/spotify-web-api/client/src/util/auth.js"],"names":["axios","removeHashParams","config","headers","getLoginRedirect","Promise","resolve","reject","get","then","res","data","err","registerSpotify","code","post","getSpotifyUser","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,OAAjC;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACP,oBAAgB,kBADT;AAEP,mCAA+B;AAFxB;AADI,CAAf;AAOA,OAAO,SAASC,gBAAT,GAA4B;AACjC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,IAAAA,KAAK,CACFQ,GADH,CACO,wBADP,EAEGC,IAFH,CAEQC,GAAG,IAAIJ,OAAO,CAACI,GAAG,CAACC,IAAL,CAFtB,EAEkCC,GAAG,IAAIL,MAAM,CAACK,GAAD,CAF/C;AAGD,GAJM,CAAP;AAKD;AAED,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,SAAO,IAAIT,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,IAAAA,KAAK,CACFe,IADH,CACQ,YADR,EACsB;AAAED,MAAAA,IAAI,EAAEb,gBAAgB,CAACa,IAAD;AAAxB,KADtB,EACwDZ,MADxD,EAEGO,IAFH,CAGIC,GAAG,IAAIJ,OAAO,CAACI,GAAG,CAACC,IAAL,CAHlB,EAIIC,GAAG,IAAIL,MAAM,CAACK,GAAD,CAJjB;AAMD,GAPM,CAAP;AAQD;AAED,OAAO,SAASI,cAAT,GAA0B;AAC/B,SAAO,IAAIX,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,IAAAA,KAAK,CACFQ,GADH,CACO,YADP,EAEGC,IAFH,CAGIC,GAAG,IAAIJ,OAAO,CAACI,GAAG,CAACC,IAAL,CAHlB,EAIIC,GAAG,IAAIL,MAAM,CAACK,GAAD,CAJjB;AAMD,GAPM,CAAP;AAQD;AAED,OAAO,SAASK,MAAT,GAAkB;AACvB,SAAO,IAAIZ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,IAAAA,KAAK,CACFQ,GADH,CACO,cADP,EAEGC,IAFH,CAGIC,GAAG,IAAIJ,OAAO,CAACI,GAAD,CAHlB,EAIIE,GAAG,IAAIL,MAAM,CAACK,GAAD,CAJjB;AAMD,GAPM,CAAP;AAQD","sourcesContent":["import axios from 'axios';\nimport { removeHashParams } from './url';\n\nconst config = { \n  headers: {  \n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n}\n\nexport function getLoginRedirect() {\n  return new Promise((resolve, reject) => {\n    axios\n      .get('/auth/redirect-spotify')\n      .then(res => resolve(res.data), err => reject(err));\n  });\n}\n\nexport function registerSpotify(code) {\n  return new Promise((resolve, reject) => {\n    axios\n      .post('/auth/user', { code: removeHashParams(code) }, config)\n      .then(\n        res => resolve(res.data),\n        err => reject(err)\n      );\n  });\n}\n\nexport function getSpotifyUser() {\n  return new Promise((resolve, reject) => {\n    axios\n      .get('/auth/user')\n      .then(\n        res => resolve(res.data),\n        err => reject(err)\n      );\n  });\n}\n\nexport function logout() {\n  return new Promise((resolve, reject) => {\n    axios\n      .get('/auth/logout')\n      .then(\n        res => resolve(res),\n        err => reject(err)\n      );\n  });\n}"]},"metadata":{},"sourceType":"module"}